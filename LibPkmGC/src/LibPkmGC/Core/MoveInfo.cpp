/*
* Copyright (C) TuxSH 2015
* This file is part of LibPkmGC.
*
* LibPkmGC is free software: you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* LibPkmGC is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with LibPkmGC.  If not, see <http://www.gnu.org/licenses/>.
*/

#include <LibPkmGC/Core/MoveInfo.h>
#include <LibPkmGC/Core/Detail/StructMacros.h>

namespace LibPkmGC {

void PokemonMove::load(u8 * data) {
	LD_FIELD_E_MAX(u16, move, 0, PokemonMoveIndex, PsychoBoost);
	LD_FIELD(u8, currentPPs, 2);
	LD_FIELD_MAX(u8, nbPPUpsUsed, 3, 3);
}

void PokemonMove::save(u8 * data) {
	SV_FIELD_E_MAX(u16, move, 0, PokemonMoveIndex, PsychoBoost);
	SV_FIELD(u8, currentPPs, 2);
	SV_FIELD_MAX(u8, nbPPUpsUsed, 3, 3);
}

u8 PokemonMove::calculateMaxPP(void) const {
	u32 baseMaxPP = (move > PsychoBoost) ? 0 : (u32)getBaseMoveMaxPPs(move);
	return (u8)(baseMaxPP*(100 + (u32)nbPPUpsUsed * 20) / 100);
}

const u8 baseMoveMaxPPs[355] = {
	0,
	35,
	25,
	10,
	15,
	20,
	20,
	15,
	15,
	15,
	35,
	30,
	5,
	10,
	30,
	30,
	35,
	35,
	20,
	15,
	20,
	20,
	10,
	20,
	30,
	5,
	25,
	15,
	15,
	15,
	25,
	20,
	5,
	35,
	15,
	20,
	20,
	20,
	15,
	30,
	35,
	20,
	20,
	30,
	25,
	40,
	20,
	15,
	20,
	20,
	20,
	30,
	25,
	15,
	30,
	25,
	5,
	15,
	10,
	5,
	20,
	20,
	20,
	5,
	35,
	20,
	25,
	20,
	20,
	20,
	15,
	20,
	10,
	10,
	40,
	25,
	10,
	35,
	30,
	15,
	20,
	40,
	10,
	15,
	30,
	15,
	20,
	10,
	15,
	10,
	5,
	10,
	10,
	25,
	10,
	20,
	40,
	30,
	30,
	20,
	20,
	15,
	10,
	40,
	15,
	20,
	30,
	20,
	20,
	10,
	40,
	40,
	30,
	30,
	30,
	20,
	30,
	10,
	10,
	20,
	5,
	10,
	30,
	20,
	20,
	20,
	5,
	15,
	10,
	20,
	15,
	15,
	35,
	20,
	15,
	10,
	20,
	30,
	15,
	40,
	20,
	15,
	10,
	5,
	10,
	30,
	10,
	15,
	20,
	15,
	40,
	40,
	10,
	5,
	15,
	10,
	10,
	10,
	15,
	30,
	30,
	10,
	10,
	20,
	10,
	1,
	1,
	10,
	10,
	10,
	5,
	15,
	25,
	15,
	10,
	15,
	30,
	5,
	40,
	15,
	10,
	25,
	10,
	30,
	10,
	20,
	10,
	10,
	10,
	10,
	10,
	20,
	5,
	40,
	5,
	5,
	15,
	5,
	10,
	5,
	15,
	10,
	5,
	10,
	20,
	20,
	40,
	15,
	10,
	20,
	20,
	25,
	5,
	15,
	10,
	5,
	20,
	15,
	20,
	25,
	20,
	5,
	30,
	5,
	10,
	20,
	40,
	5,
	20,
	40,
	20,
	15,
	35,
	10,
	5,
	5,
	5,
	15,
	5,
	20,
	5,
	5,
	15,
	20,
	10,
	5,
	5,
	15,
	15,
	15,
	15,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	10,
	15,
	15,
	15,
	10,
	20,
	20,
	10,
	20,
	20,
	20,
	20,
	20,
	10,
	10,
	10,
	20,
	20,
	5,
	15,
	10,
	10,
	15,
	10,
	20,
	5,
	5,
	10,
	10,
	20,
	5,
	10,
	20,
	10,
	20,
	20,
	20,
	5,
	5,
	15,
	20,
	10,
	15,
	20,
	15,
	10,
	10,
	15,
	10,
	5,
	5,
	10,
	15,
	10,
	5,
	20,
	25,
	5,
	40,
	10,
	5,
	40,
	15,
	20,
	20,
	5,
	15,
	20,
	30,
	15,
	15,
	5,
	10,
	30,
	20,
	30,
	15,
	5,
	40,
	15,
	5,
	20,
	5,
	15,
	25,
	40,
	15,
	20,
	15,
	20,
	15,
	20,
	10,
	20,
	20,
	5,
	5
};

u8 getBaseMoveMaxPPs(PokemonMoveIndex move) {
	if (move > PsychoBoost) return 0;
	return baseMoveMaxPPs[(size_t)move];
}


}